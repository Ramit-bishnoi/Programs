*****************************************************************************************************************************************
1) sum  of all element of each element in matrix

#include <stdio.h>

int main()
{
    int m , n , i , j ;
    printf("enter no. of rows : " );
    scanf("%d", &m) ;
    printf("enter no. of column : ");
    scanf("%d", &n);
    int mat[m][n];
    int row ;
    for(i = 0 ; i < m ; i ++)
    {
        for(j = 0 ; j < n  ; j ++ )
        {
            printf("enter (%d,%d) element : " , i+1 , j+1);
            scanf("%d" , &mat[i][j]) ;
        }
        
    }
    for(i = 0 ; i <m ; i ++)
    {
        row = 0;
        for(j = 0 ; j < n  ; j ++ )
        {

            row += mat[i][j];
        }
        printf("sum of row %d = %d \n" , i+1 , row );
        
    }
    
}

*****************************************************************************************************************************************

2) transpose of a matrix 

#include <stdio.h>

int main()
{
    int m , n , i , j ;
    printf("enter no. of rows : " );
    scanf("%d", &m) ;
    printf("enter no. of column : ");
    scanf("%d", &n);
    int mat[m][n] , matr[n][m];
    int row ;
    for(i = 0 ; i < m ; i ++)
    {
        for(j = 0 ; j < n  ; j ++ )
        {
            printf("enter (%d,%d) element : " , i+1 , j+1);
            scanf("%d" , &mat[i][j]) ;
        }
        
    }
    for(i = 0 ; i <m ; i ++)
    {
        
        for(j = 0 ; j < n  ; j ++ )
        {

            matr[j][i] = mat[i][j];
        }
        
    }
    
    for(i = 0 ; i < n ; i ++)
    {
        for(j = 0 ; j < m  ; j ++ )
        {
            printf("%d " , matr[i][j]);
            
        }
        printf("\n");
        
    }
    
}

*****************************************************************************************************************************************
3) print diagonals of a square matrix

#include <stdio.h>

int main()
{
    int m , n , i , j ;
    printf("enter no. of rows : " );
    scanf("%d", &m) ;
    printf("enter no. of column : ");
    scanf("%d", &n);
    int mat[m][n];
    
    for(i = 0 ; i < m ; i ++)
    {
        for(j = 0 ; j < n  ; j ++ )
        {
            printf("enter (%d,%d) element : " , i+1 , j+1);
            scanf("%d" , &mat[i][j]) ;
        }
        
    }
    if(m == n )
    {    
        for(i = 0 ; i < m ; i ++)
        {
            for(j = 0 ; j < n  ; j ++ )
            {
                if(i == j)
                {
                    printf("%d" , mat[i][j]);
                }
                else
                {printf("\t");}
            }
            printf("\n");
        }
    }
    else 
    {
        printf("this is not a  square matrix");
    }
} 

*****************************************************************************************************************************************

4) matrix multiplication 

#include <stdio.h>

int main()
{
    int r1 , c1 , r2 ,c2 , add ;
    printf("enter no. of rows of matrix 1 : ");
    scanf("%d" , &r1);
    printf("enter no. of column of matrix 1 : ");
    scanf("%d" , &c1);
    
    printf("enter no. of rows of matrix 2 : ");
    scanf("%d" , &r2);
    printf("enter no. of column of matrix 2 : ");
    scanf("%d" , &c2);
    
    int mat1[r1][c1] , mat2[r2][c2] , multi[r1][c2] ;
    
    printf("enter elements of matrix 1 : \n");
    for(int i = 0 ; i < r1 ; i++)
    {
        for(int j = 0 ; j < c1 ; j++)
        {
            printf("enter element (%d , %d) :" , i+1 , j+1);
            scanf("%d", &mat1[i][j]);
        }
        
    }
    printf("enter elements of matrix 2 : \n");
    for(int i = 0 ; i < r2 ; i++)
    {
        for(int j = 0 ; j < c2 ; j++)
        {
            printf("enter element (%d , %d) :" , i+1 , j+1);
            scanf("%d" , &mat2[i][j]);
        }
    }
    
    if(c1 ==  r2)
    {
        for(int i = 0 ; i < r1 ; i++)
        {
            
            for(int j = 0 ; j < c1 ; j++)
            {
                add =0 ;
                for(int k = 0 ; k < r1 ; k++)
                {
                    add = add + (mat1[i][k] * mat2[k][j]);
                }
                multi[i][j] = add ;
            }
            
        }
        printf("matrix after multipliction : \n");
        for(int i = 0 ; i < r1 ; i++)
        {
            for(int j = 0 ; j < c2 ; j++)
            {
                printf(" %d " , multi[i][j]);
            }
            printf("\n");
        }
        
    }
    else 
    {
        printf("matrix multiplication is not possible ");
    }
    
    
}

*****************************************************************************************************************************************
